
*********************************************************************************************
# Name : Emeka Mkpume

## File : MVC_CH_7_HW_7

### Date : March 25, 2020

1. There are many kinds of tests, including Unit Tests. What is a unit test, and what 
does it enable you to do?

Unit testing is the process through which units of source code are tested to verify if
they work properly.
Unit tests are used to validate the behavior of individual components and features in an
application, and ASP.NET Core and the MVC framework have been designed to make it as easy
as possible to set up and run unit tests for web applications.

2. What is the primary benefit of using unit tests?

Unit tests detect changes which may break a design contract. They help with maintaining 
and changing the code. Unit testing really reduces defects in the newly developed features
or reduces bugs when changing the existing functionality. Unit Testing verifies the accuracy
of the each unit.

3. What is the purpose of using method GetHashCode() when using Assert.Equal()?

GetHashCode() Method is used to return the hash code for this instance. A hash code
is a numeric value which is used to insert and identify an object in a hash-based collection.
The GetHashCode method provides this hash code for algorithms that need quick checks
of object equality.
Assert. assertEquals() methods checks that the two objects are equals or not. If they are not, 
an AssertionError without a message is thrown. Incase if both expected and actual values are
null, then this method returns equal.

4. The book states: “[T]he chain of dependencies can make it difficult to understand
 what causes a test to fail.” Why is this statement true?
 
becuase every component
 
5. How do unit tests isolate small parts of an application?

By testing the parts of a program first and then testing the sum of its parts, integration 
testing becomes much easier.

6. According to the book, what is the key to isolating components?

7. Briefly discuss the nature and purpose of a fake implementation of a class.
 What does a fake 
implementation do that a real implementation cannot do?
8. What is test driven development? What is the development cycle for test driven development? 

Test-driven development (TDD) is a software development process that relies on the repetition
of a very short development cycle: requirements are turned into very specific test cases, 
then the code is improved so that the tests pass.

9. What are parameterized tests and why would we want to use them?

Parameterized test is to execute the same test over and over again using different values. 
It helps developer to save time in executing same test which differs only in their inputs 
and expected results. Using Parameterized test, one can set up a test method that retrieves 
data from some data source.

10. What is a mocking framework? What is the difference between a fake object and a mock object?

 A mocking framework is used to create replacement objects. These objects can be Fakes, Stubs, 
 and Mocks. In unit testing scenarios, developers use mocking frameworks to isolate dependencies. 
 This allows for a quick, concise, and reliable way to ensure that the testing goes smoothly.
 Stub - an object that provides predefined answers to method calls. Mock - an object on which you 
 set expectations. Fake - an object with limited capabilities (for the purposes of testing), 
 e.g. a fake web service
 
11. (Optional) Can you think of one very important drawback to writing unit tests?

a. Waste time fixing bugs you can live with. 
b. Spend time understanding and refactoring code you don't need to understand.
c. Lose time that could go into the next project.


*******************************************************************************************************
